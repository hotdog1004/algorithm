/**
 * 멀리 뛰기
 * @param {number} n
 * @return {number} result
 * 두효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
 * (1칸, 1칸, 1칸, 1칸)
 * (1칸, 2칸, 1칸)
 * (1칸, 1칸, 2칸)
 * (2칸, 1칸, 1칸)
 * (2칸, 2칸)
 * 의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다.
 * 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요.
 * 예를 들어 4가 입력된다면, 5를 return하면 됩니다.
 * [제한조건]
 * n은 1 이상, 2000 이하인 정수입니다.
 */

// n+1개의 배열 만들기
// 직관적으로 알 수 있는 수 채워준 후 수들을 이용해서 값 구하기
// 문제에 1234567를 나눈 나머지를 리턴하는 함수라고 힌트를 줬음.
// n의 범위가 2000까지이므로 int의 범위를 넘어설 수 있는 걸 대비해서 1234567로 나눈 나머지값을 사용하라는 뜻

function solution(n) {
  let dy = Array.from({ length: n + 1 }, () => 0);
  dy[1] = 1;
  dy[2] = 2;

  if (n <= 2) return n;
  for (let i = 3; i <= n; i++) {
    dy[i] = (dy[i - 1] + dy[i - 2]) % 1234567;
  }

  return dy[n];
}
console.log(solution(4)); // 5
// console.log(solution(3)); // 3
